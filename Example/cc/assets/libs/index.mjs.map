{"version":3,"sources":["../../src/Web/index.ts","../../src/utils.ts","../../src/CocosCreator/Android.ts","../../src/constant.ts","../../src/CocosCreator/IOS.ts","../../src/type.ts","../../src/CocosCreator/index.ts"],"names":["clearCommonProperties","clearStaticCommonProperties","enableTrack","getDataTowerId","getDistinctId","init","setAccountId","setAdjustId","setAppsFlyerId","setCommonProperties","setDistinctId","setFirebaseAppInstanceId","setKochavaId","setStaticCommonProperties","track","userAdd","userAppend","userDel","userSet","userSetOnce","userUniqAppend","userUnset","LogLevel","CurrentPlatform"],"mappings":"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","sourcesContent":["import { Config } from '../type';\nimport { logger } from '../utils';\n\nconst CurrentPlatform: any = new Proxy(\n  {},\n  {\n    get(target, key: string) {\n      return (...args: any[]) => console.log(`${key}(${args.join(', ')})`);\n    },\n  },\n);\n\nexport function init(config: Config) {\n  if (config.isDebug) return logger('Web', 'init', config);\n  CurrentPlatform.init(config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  CurrentPlatform.track(eventName, properties);\n}\nexport function enableTrack(): void {\n  CurrentPlatform.enableTrack();\n}\nexport function userSet(properties: Record<string, any>): void {\n  CurrentPlatform.userSet(properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  CurrentPlatform.userSetOnce(properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  CurrentPlatform.userAdd(properties);\n}\nexport function userUnset(...properties: string[]): void {\n  CurrentPlatform.userUnset(...properties);\n}\nexport function userDel(): void {\n  CurrentPlatform.userDel();\n}\nexport function userAppend(...properties: string[]): void {\n  CurrentPlatform.userAppend(...properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  CurrentPlatform.userUniqAppend(...properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return Promise.resolve('data tower id');\n  callback('data tower id');\n}\nexport function setAccountId(id: string): void {\n  CurrentPlatform.setAccountId(id);\n}\nexport function setDistinctId(id: string): void {\n  CurrentPlatform.setDistinctId(id);\n}\nexport function getDistinctId(): string | void | null {\n  return CurrentPlatform.getDistinctId();\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  CurrentPlatform.setFirebaseAppInstanceId(id);\n}\nexport function setAppsFlyerId(id: string): void {\n  CurrentPlatform.setAppsFlyerId(id);\n}\nexport function setKochavaId(id: string): void {\n  CurrentPlatform.setKochavaId(id);\n}\nexport function setAdjustId(id: string): void {\n  CurrentPlatform.setAdjustId(id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setCommonProperties(properties);\n}\nexport function clearCommonProperties(): void {\n  CurrentPlatform.clearCommonProperties();\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setStaticCommonProperties(properties);\n}\nexport function clearStaticCommonProperties(): void {\n  CurrentPlatform.clearStaticCommonProperties();\n}\n","const typeMap = {\n  string: 'Ljava/lang/String;',\n  number: 'Ljava/lang/Double;',\n  boolean: 'Ljava/lang/Boolean;',\n  map: 'Ljava/util/Map;',\n  array: 'Ljava/util/List;',\n};\n\n// 生成Android签名\nexport function generateSignature(types: (keyof typeof typeMap)[]): string {\n  return `(${types.map((type) => typeMap[type]).join('')})V`;\n}\n\nexport function logger(...args: any[]) {\n  console.log('[DataTower SDK]:', ...args);\n}\n","import { AndroidClass, DefaultConfig } from '../constant';\nimport type { Config } from '../type';\nimport { generateSignature, logger } from '../utils';\n\n/**\n * cocos creator Android bridge\n */\nexport function init(config: Config) {\n  config = Object.assign({}, DefaultConfig, config);\n  if (config.isDebug) return logger('Android', 'init', config);\n  jsb.reflection.callStaticMethod(AndroidClass, 'initSDK', generateSignature(['map']), config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'track', generateSignature(['string', 'map']), eventName, properties);\n}\nexport function enableTrack(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'enableTrack');\n}\nexport function userSet(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userSet', generateSignature(['map']), properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userSetOnce', generateSignature(['map']), properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userAdd', generateSignature(['map']), properties);\n}\nexport function userUnset(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userUnset', generateSignature(['array']), properties);\n}\nexport function userDel(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userDel');\n}\nexport function userAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userAppend', generateSignature(['array']), properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userUniqAppend', generateSignature(['array']), properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return new Promise((resolve) => getDataTowerId(resolve));\n  jsb.reflection.callStaticMethod(AndroidClass, 'getDataTowerId', generateSignature(['string']), callback);\n}\nexport function setAccountId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAccountId', generateSignature(['string']), id);\n}\nexport function setDistinctId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setDistinctId', generateSignature(['string']), id);\n}\nexport function getDistinctId(): string | void | null {\n  jsb.reflection.callStaticMethod(AndroidClass, 'getDistinctId');\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setFirebaseAppInstanceId', generateSignature(['string']), id);\n}\nexport function setAppsFlyerId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAppsFlyerId', generateSignature(['string']), id);\n}\nexport function setKochavaId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setKochavaId', generateSignature(['string']), id);\n}\nexport function setAdjustId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAdjustId', generateSignature(['string']), id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setCommonProperties', generateSignature(['map']), properties);\n}\nexport function clearCommonProperties(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'clearCommonProperties');\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setStaticCommonProperties', generateSignature(['map']), properties);\n}\nexport function clearStaticCommonProperties(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'clearStaticCommonProperties');\n}\n","import type { Config } from './type';\n\nexport const DefaultConfig: Config = {\n  context: {},\n  appId: '',\n  serverUrl: '',\n  channel: '',\n  isDebug: false,\n  logLevel: 1,\n  manualEnableUpload: false,\n  commonProperties: {},\n};\n\nexport const AndroidClass = 'ai/datatower/analytics/DT';\nexport const IOSClass = 'DT';\n","import { DefaultConfig, IOSClass } from '../constant';\nimport type { Config } from '../type';\nimport { logger } from '../utils';\n\n/**\n * cocos creator IOS bridge\n */\nexport function init(config: Config) {\n  config = Object.assign({}, DefaultConfig, config);\n  if (config.isDebug) return logger('IOS', 'init', config);\n  jsb.reflection.callStaticMethod(IOSClass, 'initSDK:', config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'track:properties:', eventName, properties);\n}\nexport function enableTrack(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'enableTrack');\n}\nexport function userSet(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userSet:', properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userSetOnce:', properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userAdd:', properties);\n}\nexport function userUnset(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userUnset:', properties);\n}\nexport function userDel(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userDel');\n}\nexport function userAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userAppend:', properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userUniqAppend:', properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return new Promise((resolve) => getDataTowerId(resolve));\n  jsb.reflection.callStaticMethod(IOSClass, 'getDataTowerId:', callback);\n}\nexport function setAccountId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAccountId:', id);\n}\nexport function setDistinctId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setDistinctId:', id);\n}\nexport function getDistinctId(): string | void | null {\n  jsb.reflection.callStaticMethod(IOSClass, 'getDistinctId');\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setFirebaseAppInstanceId:', id);\n}\nexport function setAppsFlyerId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAppsFlyerId:', id);\n}\nexport function setKochavaId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setKochavaId:', id);\n}\nexport function setAdjustId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAdjustId:', id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setCommonProperties:', properties);\n}\nexport function clearCommonProperties(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'clearCommonProperties');\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setStaticCommonProperties:', properties);\n}\nexport function clearStaticCommonProperties(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'clearStaticCommonProperties');\n}\n","export interface Context {\n  /* TODO: */\n}\n\nexport enum LogLevel {\n  VERBOSE = 1,\n  ASSERT = 2,\n  DEBUG = 3,\n  INFO = 4,\n  WARN = 5,\n  ERROR = 6,\n}\n\nexport interface Config {\n  context: Context; // Context 上下文\n  appId: string; // 项目唯一标识，创建项目后 DT 后台自动分配，请在【项目设置-项目详情】中获取\n  serverUrl: string; // 数据上报地址，创建项目后 DT 后台自动分配，请在【项目设置-项目详情】中获取\n  channel: string; // 渠道，打多渠道包时需要用到，可使用 SDK 内部提供的实现， 默认为“”\n  isDebug: boolean; // 是否打开调试，调试模式下将打印 log， 默认为 false，log 标签为 DataTower\n  logLevel: LogLevel; // log 的级别，默认为 VERBOSE，仅在 isDebug = true 有效\n  manualEnableUpload: boolean; // 是否由接入方手动启动上报\n  commonProperties: Record<string, any>;\n}\n\nexport interface DataTower {\n  init(config: Config): void;\n  enableTrack(): void;\n  track(eventName: string, properties?: Record<string, any>): void;\n  userSet(properties: Record<string, any>): void;\n  userSetOnce(properties: Record<string, any>): void;\n  userAdd(properties: Record<string, any>): void;\n  userUnset(...properties: string[]): void;\n  userDel(): void;\n  userAppend(...properties: string[]): void;\n  userUniqAppend(...properties: string[]): void;\n  getDataTowerId(callback: (id: string) => void): void; // 异步获取 dt_id\n  getDataTowerId(): Promise<string>; // 异步获取 dt_id\n  setAccountId(id: string): void; // 设置 acid（空字符串则对应 logout）\n  setDistinctId(id: string): void; // 设置访客 id\n  getDistinctId(): string | null | void; // 获取访客 id\n  setFirebaseAppInstanceId(id: string): void;\n  setAppsFlyerId(id: string): void;\n  setKochavaId(id: string): void;\n  setAdjustId(id: string): void;\n  setCommonProperties(properties: Record<string, any>): void; // 设置动态公共属性\n  clearCommonProperties(): void; // 清除动态公共属性\n  setStaticCommonProperties(properties: Record<string, any>): void; // 设置静态公共属性\n  clearStaticCommonProperties(): void; // 清除静态公共属性\n}\n\ndeclare global {\n  interface Window {\n    DataTower: DataTower;\n  }\n}\ndeclare var DataTower: DataTower;\n","import * as Web from '../Web/index';\nimport type { Config, DataTower } from '../type';\nimport * as Android from './Android';\nimport * as IOS from './IOS';\nexport * from '../type';\n\n// TODO: 在编译期区分平台\n// #if NATIVE_ANDROID\n// export * from './Android.js';\n// #elif NATIVE_IOS\n// export * from './IOS.js';\n// #else\n\n// 在运行时区分平台\nconst SupportPlatforms = [\n  [cc.sys.isNativeAndroid, Android],\n  [cc.sys.isNativeIOS, IOS],\n  [true, Web],\n] as const;\nconst CurrentPlatform: DataTower = SupportPlatforms.find((item) => item[0])![1];\n\n/**\n * cocos creator platform API\n * includes android/ios, quick app and mini game/program\n */\nexport function init(config: Config) {\n  CurrentPlatform.init(config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  CurrentPlatform.track(eventName, properties);\n}\nexport function enableTrack(): void {\n  CurrentPlatform.enableTrack();\n}\nexport function userSet(properties: Record<string, any>): void {\n  CurrentPlatform.userSet(properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  CurrentPlatform.userSetOnce(properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  CurrentPlatform.userAdd(properties);\n}\nexport function userUnset(...properties: string[]): void {\n  CurrentPlatform.userUnset(...properties);\n}\nexport function userDel(): void {\n  CurrentPlatform.userDel();\n}\nexport function userAppend(...properties: string[]): void {\n  CurrentPlatform.userAppend(...properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  CurrentPlatform.userUniqAppend(...properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  return CurrentPlatform.getDataTowerId(callback!);\n}\nexport function setAccountId(id: string): void {\n  CurrentPlatform.setAccountId(id);\n}\nexport function setDistinctId(id: string): void {\n  CurrentPlatform.setDistinctId(id);\n}\nexport function getDistinctId(): string | void | null {\n  return CurrentPlatform.getDistinctId();\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  CurrentPlatform.setFirebaseAppInstanceId(id);\n}\nexport function setAppsFlyerId(id: string): void {\n  CurrentPlatform.setAppsFlyerId(id);\n}\nexport function setKochavaId(id: string): void {\n  CurrentPlatform.setKochavaId(id);\n}\nexport function setAdjustId(id: string): void {\n  CurrentPlatform.setAdjustId(id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setCommonProperties(properties);\n}\nexport function clearCommonProperties(): void {\n  CurrentPlatform.clearCommonProperties();\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setStaticCommonProperties(properties);\n}\nexport function clearStaticCommonProperties(): void {\n  CurrentPlatform.clearStaticCommonProperties();\n}\n// #endif\n"]}