{"version":3,"sources":["../../src/Web/index.ts","../../src/utils.ts","../../src/CocosCreator/Android.ts","../../src/constant.ts","../../src/CocosCreator/IOS.ts","../../src/type.ts","../../src/CocosCreator/index.ts"],"names":["Web_exports","__export","clearCommonProperties","clearStaticCommonProperties","enableTrack","getDataTowerId","getDistinctId","init","setAccountId","setAdjustId","setAppsFlyerId","setCommonProperties","setDistinctId","setFirebaseAppInstanceId","setKochavaId","setStaticCommonProperties","track","userAdd","userAppend","userDel","userSet","userSetOnce","userUniqAppend","userUnset","typeMap","generateSignature","types","type","logger","args","CurrentPlatform","target","key","config","eventName","properties","callback","id","Android_exports","DefaultConfig","AndroidClass","IOSClass","resolve","IOS_exports","LogLevel","SupportPlatforms","item"],"mappings":"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","sourcesContent":["import { Config } from '../type';\nimport { logger } from '../utils';\n\nconst CurrentPlatform: any = new Proxy(\n  {},\n  {\n    get(target, key: string) {\n      return (...args: any[]) => console.log(`${key}(${args.join(', ')})`);\n    },\n  },\n);\n\nexport function init(config: Config) {\n  if (config.isDebug) return logger('Web', 'init', config);\n  CurrentPlatform.init(config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  CurrentPlatform.track(eventName, properties);\n}\nexport function enableTrack(): void {\n  CurrentPlatform.enableTrack();\n}\nexport function userSet(properties: Record<string, any>): void {\n  CurrentPlatform.userSet(properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  CurrentPlatform.userSetOnce(properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  CurrentPlatform.userAdd(properties);\n}\nexport function userUnset(...properties: string[]): void {\n  CurrentPlatform.userUnset(...properties);\n}\nexport function userDel(): void {\n  CurrentPlatform.userDel();\n}\nexport function userAppend(...properties: string[]): void {\n  CurrentPlatform.userAppend(...properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  CurrentPlatform.userUniqAppend(...properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return Promise.resolve('data tower id');\n  callback('data tower id');\n}\nexport function setAccountId(id: string): void {\n  CurrentPlatform.setAccountId(id);\n}\nexport function setDistinctId(id: string): void {\n  CurrentPlatform.setDistinctId(id);\n}\nexport function getDistinctId(): string | void | null {\n  return CurrentPlatform.getDistinctId();\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  CurrentPlatform.setFirebaseAppInstanceId(id);\n}\nexport function setAppsFlyerId(id: string): void {\n  CurrentPlatform.setAppsFlyerId(id);\n}\nexport function setKochavaId(id: string): void {\n  CurrentPlatform.setKochavaId(id);\n}\nexport function setAdjustId(id: string): void {\n  CurrentPlatform.setAdjustId(id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setCommonProperties(properties);\n}\nexport function clearCommonProperties(): void {\n  CurrentPlatform.clearCommonProperties();\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setStaticCommonProperties(properties);\n}\nexport function clearStaticCommonProperties(): void {\n  CurrentPlatform.clearStaticCommonProperties();\n}\n","const typeMap = {\n  string: 'Ljava/lang/String;',\n  number: 'Ljava/lang/Double;',\n  boolean: 'Ljava/lang/Boolean;',\n  map: 'Ljava/util/Map;',\n  array: 'Ljava/util/List;',\n};\n\n// 生成Android签名\nexport function generateSignature(types: (keyof typeof typeMap)[]): string {\n  return `(${types.map((type) => typeMap[type]).join('')})V`;\n}\n\nexport function logger(...args: any[]) {\n  console.log('[DataTower SDK]:', ...args);\n}\n","import { AndroidClass, DefaultConfig } from '../constant';\nimport type { Config } from '../type';\nimport { generateSignature, logger } from '../utils';\n\n/**\n * cocos creator Android bridge\n */\nexport function init(config: Config) {\n  config = Object.assign({}, DefaultConfig, config);\n  if (config.isDebug) return logger('Android', 'init', config);\n  jsb.reflection.callStaticMethod(AndroidClass, 'initSDK', generateSignature(['map']), config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'track', generateSignature(['string', 'map']), eventName, properties);\n}\nexport function enableTrack(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'enableTrack');\n}\nexport function userSet(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userSet', generateSignature(['map']), properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userSetOnce', generateSignature(['map']), properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userAdd', generateSignature(['map']), properties);\n}\nexport function userUnset(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userUnset', generateSignature(['array']), properties);\n}\nexport function userDel(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userDel');\n}\nexport function userAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userAppend', generateSignature(['array']), properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'userUniqAppend', generateSignature(['array']), properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return new Promise((resolve) => getDataTowerId(resolve));\n  jsb.reflection.callStaticMethod(AndroidClass, 'getDataTowerId', generateSignature(['string']), callback);\n}\nexport function setAccountId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAccountId', generateSignature(['string']), id);\n}\nexport function setDistinctId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setDistinctId', generateSignature(['string']), id);\n}\nexport function getDistinctId(): string | void | null {\n  jsb.reflection.callStaticMethod(AndroidClass, 'getDistinctId');\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setFirebaseAppInstanceId', generateSignature(['string']), id);\n}\nexport function setAppsFlyerId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAppsFlyerId', generateSignature(['string']), id);\n}\nexport function setKochavaId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setKochavaId', generateSignature(['string']), id);\n}\nexport function setAdjustId(id: string): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setAdjustId', generateSignature(['string']), id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setCommonProperties', generateSignature(['map']), properties);\n}\nexport function clearCommonProperties(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'clearCommonProperties');\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'setStaticCommonProperties', generateSignature(['map']), properties);\n}\nexport function clearStaticCommonProperties(): void {\n  jsb.reflection.callStaticMethod(AndroidClass, 'clearStaticCommonProperties');\n}\n","import type { Config } from './type';\n\nexport const DefaultConfig: Config = {\n  context: {},\n  appId: '',\n  serverUrl: '',\n  channel: '',\n  isDebug: false,\n  logLevel: 1,\n  manualEnableUpload: false,\n  commonProperties: {},\n};\n\nexport const AndroidClass = 'ai/datatower/analytics/DT';\nexport const IOSClass = 'DT';\n","import { DefaultConfig, IOSClass } from '../constant';\nimport type { Config } from '../type';\nimport { logger } from '../utils';\n\n/**\n * cocos creator IOS bridge\n */\nexport function init(config: Config) {\n  config = Object.assign({}, DefaultConfig, config);\n  if (config.isDebug) return logger('IOS', 'init', config);\n  jsb.reflection.callStaticMethod(IOSClass, 'initSDK:', config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'track:properties:', eventName, properties);\n}\nexport function enableTrack(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'enableTrack');\n}\nexport function userSet(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userSet:', properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userSetOnce:', properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userAdd:', properties);\n}\nexport function userUnset(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userUnset:', properties);\n}\nexport function userDel(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userDel');\n}\nexport function userAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userAppend:', properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'userUniqAppend:', properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  if (!callback) return new Promise((resolve) => getDataTowerId(resolve));\n  jsb.reflection.callStaticMethod(IOSClass, 'getDataTowerId:', callback);\n}\nexport function setAccountId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAccountId:', id);\n}\nexport function setDistinctId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setDistinctId:', id);\n}\nexport function getDistinctId(): string | void | null {\n  jsb.reflection.callStaticMethod(IOSClass, 'getDistinctId');\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setFirebaseAppInstanceId:', id);\n}\nexport function setAppsFlyerId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAppsFlyerId:', id);\n}\nexport function setKochavaId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setKochavaId:', id);\n}\nexport function setAdjustId(id: string): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setAdjustId:', id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setCommonProperties:', properties);\n}\nexport function clearCommonProperties(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'clearCommonProperties');\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'setStaticCommonProperties:', properties);\n}\nexport function clearStaticCommonProperties(): void {\n  jsb.reflection.callStaticMethod(IOSClass, 'clearStaticCommonProperties');\n}\n","export interface Context {\n  /* TODO: */\n}\n\nexport enum LogLevel {\n  VERBOSE = 1,\n  ASSERT = 2,\n  DEBUG = 3,\n  INFO = 4,\n  WARN = 5,\n  ERROR = 6,\n}\n\nexport interface Config {\n  context: Context; // Context 上下文\n  appId: string; // 项目唯一标识，创建项目后 DT 后台自动分配，请在【项目设置-项目详情】中获取\n  serverUrl: string; // 数据上报地址，创建项目后 DT 后台自动分配，请在【项目设置-项目详情】中获取\n  channel: string; // 渠道，打多渠道包时需要用到，可使用 SDK 内部提供的实现， 默认为“”\n  isDebug: boolean; // 是否打开调试，调试模式下将打印 log， 默认为 false，log 标签为 DataTower\n  logLevel: LogLevel; // log 的级别，默认为 VERBOSE，仅在 isDebug = true 有效\n  manualEnableUpload: boolean; // 是否由接入方手动启动上报\n  commonProperties: Record<string, any>;\n}\n\nexport interface DataTower {\n  init(config: Config): void;\n  enableTrack(): void;\n  track(eventName: string, properties?: Record<string, any>): void;\n  userSet(properties: Record<string, any>): void;\n  userSetOnce(properties: Record<string, any>): void;\n  userAdd(properties: Record<string, any>): void;\n  userUnset(...properties: string[]): void;\n  userDel(): void;\n  userAppend(...properties: string[]): void;\n  userUniqAppend(...properties: string[]): void;\n  getDataTowerId(callback: (id: string) => void): void; // 异步获取 dt_id\n  getDataTowerId(): Promise<string>; // 异步获取 dt_id\n  setAccountId(id: string): void; // 设置 acid（空字符串则对应 logout）\n  setDistinctId(id: string): void; // 设置访客 id\n  getDistinctId(): string | null | void; // 获取访客 id\n  setFirebaseAppInstanceId(id: string): void;\n  setAppsFlyerId(id: string): void;\n  setKochavaId(id: string): void;\n  setAdjustId(id: string): void;\n  setCommonProperties(properties: Record<string, any>): void; // 设置动态公共属性\n  clearCommonProperties(): void; // 清除动态公共属性\n  setStaticCommonProperties(properties: Record<string, any>): void; // 设置静态公共属性\n  clearStaticCommonProperties(): void; // 清除静态公共属性\n}\n\ndeclare global {\n  interface Window {\n    DataTower: DataTower;\n  }\n}\ndeclare var DataTower: DataTower;\n","import * as Web from '../Web/index';\nimport type { Config, DataTower } from '../type';\nimport * as Android from './Android';\nimport * as IOS from './IOS';\nexport * from '../type';\n\n// TODO: 在编译期区分平台\n// #if NATIVE_ANDROID\n// export * from './Android.js';\n// #elif NATIVE_IOS\n// export * from './IOS.js';\n// #else\n\n// 在运行时区分平台\nconst SupportPlatforms = [\n  [cc.sys.isNativeAndroid, Android],\n  [cc.sys.isNativeIOS, IOS],\n  [true, Web],\n] as const;\nconst CurrentPlatform: DataTower = SupportPlatforms.find((item) => item[0])![1];\n\n/**\n * cocos creator platform API\n * includes android/ios, quick app and mini game/program\n */\nexport function init(config: Config) {\n  CurrentPlatform.init(config);\n}\nexport function track(eventName: string, properties?: Record<string, any>): void {\n  CurrentPlatform.track(eventName, properties);\n}\nexport function enableTrack(): void {\n  CurrentPlatform.enableTrack();\n}\nexport function userSet(properties: Record<string, any>): void {\n  CurrentPlatform.userSet(properties);\n}\nexport function userSetOnce(properties: Record<string, any>): void {\n  CurrentPlatform.userSetOnce(properties);\n}\nexport function userAdd(properties: Record<string, any>): void {\n  CurrentPlatform.userAdd(properties);\n}\nexport function userUnset(...properties: string[]): void {\n  CurrentPlatform.userUnset(...properties);\n}\nexport function userDel(): void {\n  CurrentPlatform.userDel();\n}\nexport function userAppend(...properties: string[]): void {\n  CurrentPlatform.userAppend(...properties);\n}\nexport function userUniqAppend(...properties: string[]): void {\n  CurrentPlatform.userUniqAppend(...properties);\n}\nexport function getDataTowerId(callback: (id: string) => void): void;\nexport function getDataTowerId(): Promise<string>;\nexport function getDataTowerId(callback?: (id: string) => void): void | Promise<string> {\n  return CurrentPlatform.getDataTowerId(callback!);\n}\nexport function setAccountId(id: string): void {\n  CurrentPlatform.setAccountId(id);\n}\nexport function setDistinctId(id: string): void {\n  CurrentPlatform.setDistinctId(id);\n}\nexport function getDistinctId(): string | void | null {\n  return CurrentPlatform.getDistinctId();\n}\nexport function setFirebaseAppInstanceId(id: string): void {\n  CurrentPlatform.setFirebaseAppInstanceId(id);\n}\nexport function setAppsFlyerId(id: string): void {\n  CurrentPlatform.setAppsFlyerId(id);\n}\nexport function setKochavaId(id: string): void {\n  CurrentPlatform.setKochavaId(id);\n}\nexport function setAdjustId(id: string): void {\n  CurrentPlatform.setAdjustId(id);\n}\nexport function setCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setCommonProperties(properties);\n}\nexport function clearCommonProperties(): void {\n  CurrentPlatform.clearCommonProperties();\n}\nexport function setStaticCommonProperties(properties: Record<string, any>): void {\n  CurrentPlatform.setStaticCommonProperties(properties);\n}\nexport function clearStaticCommonProperties(): void {\n  CurrentPlatform.clearStaticCommonProperties();\n}\n// #endif\n"]}